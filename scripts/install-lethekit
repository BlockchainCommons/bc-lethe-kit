#!/bin/bash

git submodule update --init --recursive

# usage: install-lethkit <lethkit-root> <arduino-sketchbook>

function usage {
    echo "usage: $0 <lethkit-root>"
    echo "  example:"
    echo "   $0 ~/src/bc-lethekit"
}

# https://medium.com/@Drew_Stokes/bash-argument-parsing-54f3b81a6a8f
args=( )
while (( "$#" )); do
  case "$1" in
    -f|--help)
      shift 1
      usage
      exit 0
      ;;
    --) # end argument parsing
      shift
      break
      ;;
    -*|--*=) # unsupported flags
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
    *) # preserve positional arguments
      args+=($1)
      shift
      ;;
  esac
done

if [ ${#args[@]} -ne 1 ]
then
    usage_error "must be 1 argument"
fi

echo "Note: Arduino sketchbook location is set in Arduino IDE: click File->Preferences"

if [ "$(uname)" == "Darwin" ]; then
    aroot=~/Documents/Arduino
elif [ "$(uname)" == "Linux" ]; then
    aroot=~/Arduino
fi

while true
do
  # (1) prompt user, and read command line argument
  read -p "Do you use default Arduino sketchbook location (${aroot})? [Y/n]" answer

  # (2) handle the input we were given
  case $answer in
   [yY]* )
           echo "Default path taken: ${aroot}"
           break;;

   [nN]* ) read -p "Enter Arduino sketchbook location: " aroot
           echo "Custom path taken: ${aroot}"
           break;;

   * )     echo "Enter Y or N, please.";;
  esac
done

lkroot=${args[0]}
libpath="${aroot}/libraries"

# We need python to create libwally for arduino
if ! python3 --version -v COMMAND &> /dev/null
then
    echo "Please, install python3."
    exit
fi

# Create arduino compatible libwally library, i.e. libwally-embedded
pushd deps
pwd
rm -rf libwally-embedded
mkdir -p libwally-embedded
cp -R libwally-core libwally-embedded
pushd libwally-embedded
python3 ../../scripts/libwally_build.py
popd
popd


# First, check if GxEPD2 is already installed (as a directory), warn
# and stop in this case.
gxepd2_path="${aroot}/libraries/GxEPD2"
[ -d ${gxepd2_path} ] && ! [ -L ${gxepd2_path} ] && echo "GxEPD2 already installed in ${libpath}. Please remove it; we need to replace with SW SPI enabled version." && exit 1

declare -a libs=(
    ArduinoSTL
    bc-ur-arduino
    Library-Arduino-Cbor
    secp256k1-embedded
    libwally-embedded
    bc-bytewords
    bc-crypto-base
    bc-shamir
    bc-sskr
    bc-bip39
    TRNG-for-ATSAMD51J19A-Adafruit-Metro-M4-
    GxEPD2
)

for lib in "${libs[@]}"
do
    ln -fs ${lkroot}/deps/${lib} ${libpath}
done
